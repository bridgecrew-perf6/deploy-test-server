---
# Source: testserver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-testserver
  labels:
    helm.sh/chart: testserver-0.1.0
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: testserver/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-testserver
  labels:
    helm.sh/chart: testserver-0.1.0
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: release-name
---
# Source: testserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-testserver
  labels:
    helm.sh/chart: testserver-0.1.0
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: testserver
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: testserver
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-testserver
      securityContext:
        {}
      containers:
        - name: testserver
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "cgerull/testserver:0.9.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SECRET_KEY
              value: DevHelmChartSecret
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
---
# Source: testserver/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-testserver
  labels:
    helm.sh/chart: testserver-0.1.0
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: dev-testserver-testserver-stripprefix@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: "localhost"
      http:
        paths:
          - path: /test
            pathType: Prefix
            backend:
              service:
                name: release-name-testserver
                port:
                  number: 80
---
# Source: testserver/templates/stripprefix.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: testserver-stripprefix
spec:
  stripPrefix:
    forceSlash: false
    prefixes:
        - "/test"
